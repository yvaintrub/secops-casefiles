📌 Executive Summary

This case describes a cloud-focused compromise.
The attacker obtained exposed AWS Lambda credentials, used them to enumerate cloud services (IAM, S3, SES), and launched a phishing campaign via AWS SES.

🎯 Outcome: unauthorized use of cloud resources, domain-trusted phishing, increased costs, and elevated organizational risk.

___________________________________________________________________________________________________________________

🖼 Attack Flow
            ┌───────────────────────────────┐
            │   Attacker (External Host)    │
            └──────────────┬────────────────┘
                           │  (stolen Lambda creds)
                           v
            ┌───────────────────────────────┐
            │   AWS Lambda Function         │
            │ (compromised, exposed keys)   │
            └──────────────┬────────────────┘
                           │
                           v
            ┌───────────────────────────────┐
            │   AWS API Enumeration         │
            │  (IAM, S3, SES discovery)     │
            └───────┬──────────────┬────────┘
                    │              │
                    │              │
                    v              v
     ┌──────────────────────┐   ┌──────────────────────┐
     │   IAM Accounts       │   │   S3 Buckets         │
     │ (list users/roles)   │   │ (checked for data)   │
     └──────────────────────┘   └──────────────────────┘
                    │
                    v
            ┌───────────────────────────────┐
            │   AWS SES Abuse               │
            │ (phishing via trusted domain) │
            └──────────────┬────────────────┘
                           │
                           v
            ┌───────────────────────────────┐
            │   External Victims            │
            │  (receive phishing emails)    │
            └──────────────┬────────────────┘
                           │
                           v
            ┌───────────────────────────────┐
            │   Business Impact             │
            │  - Cloud spend spike          │
            │  - Credential theft risk      │
            │  - Reputation damage          │
            └───────────────────────────────┘
___________________________________________________________________________________________________________________

📖 Attack Narrative
🥷 Stage 1 – Initial Access

☁️ Compromised Lambda credentials (e.g., leaked keys in code, misconfig).

Attacker gains programmatic access into AWS environment.

🔎 Stage 2 – Enumeration

Used stolen keys to query IAM, S3, SES via AWS API.

Discovered mail-sending capability through SES.

🎯 Stage 3 – Weaponization

Leveraged AWS SES to send phishing emails using the organization’s legitimate domain.

Phishing looked more credible due to trusted mail source.

💥 Stage 4 – Impact

Cloud billing costs increased.

Users exposed to phishing → potential credential theft.

Organization reputation at risk.
___________________________________________________________________________________________________________________
⏱️ Timeline (UTC)

| Time  | Event                                          |
| ----- | ---------------------------------------------- |
| T0    | ☁️ Lambda credentials compromised              |
| T0+1h | ☁️ AWS API enumeration begins (IAM/S3/SES)     |
| T0+2h | ☁️ SES misused to send large phishing campaign |
| T0+6h | ☁️ Cloud spend spike alerts detected           |
___________________________________________________________________________________________________________________

🔑 Key Findings

☁️ Credentials stored in Lambda code enabled full compromise.

☁️ API enumeration allowed discovery of SES.

☁️ SES misuse made phishing appear legitimate.

☁️ No monitoring of Lambda → delayed detection.
___________________________________________________________________________________________________________________

🗂️ MITRE ATT&CK Mapping

🎭 T1078 – Valid Accounts (stolen cloud keys)

🔍 T1087 – Account Discovery (IAM API calls)

📦 T1530 – Data from Cloud Storage (S3 access attempts)

📧 T1586.002 – Compromise Infrastructure: Email Accounts (SES phishing)

📤 T1567 – Exfiltration over Web Services
___________________________________________________________________________________________________________________

📂 Artifacts (Synthetic / Anonymized)

{
  "eventTime": "2025-07-21T10:58:17Z",
  "eventSource": "ses.amazonaws.com",
  "eventName": "SendEmail",
  "awsRegion": "us-east-1",
  "userIdentity": {
    "type": "IAMUser",
    "accessKeyId": "AKIA********DEMO",
    "accountId": "111122223333",
    "arn": "arn:aws:iam::111122223333:user/lambda-svc"
  },
  "requestParameters": {
    "destination": {
      "toAddresses": ["user1@external-example.net","user2@external-example.net"]
    },
    "source": "notify@mail.example.org",
    "message": {
      "subject": {"data":"Password Reset Notice"},
      "body": {"text": {"data":"Please confirm your account at https://login.example.org/reset"}}
    }
  },
  "sourceIPAddress": "203.0.113.45"
}


{
  "eventTime": "2025-07-21T10:41:03Z",
  "eventSource": "iam.amazonaws.com",
  "eventName": "ListUsers",
  "userIdentity": { "accessKeyId": "AKIA********DEMO" },
  "sourceIPAddress": "203.0.113.45"
}


{
  "eventTime": "2025-07-21T10:46:29Z",
  "eventSource": "lambda.amazonaws.com",
  "eventName": "ListFunctions",
  "userIdentity": { "accessKeyId": "AKIA********DEMO" },
  "sourceIPAddress": "203.0.113.45"
}
___________________________________________________________________________________________________________________


💻 Attacker Commands (Reconstructed, Synthetic)

# Enumerate IAM identities
aws iam list-users --profile compromised
aws iam list-roles  --profile compromised

# Check Lambda inventory
aws lambda list-functions --region us-east-1 --profile compromised

# Probe SES capability
aws ses get-send-quota      --profile compromised
aws ses list-identities     --profile compromised

# Send phishing via SES (synthetic example)
aws ses send-email \
  --from notify@mail.example.org \
  --destination ToAddresses=user1@external-example.net \
  --message Subject.Data="Password Reset Notice",Body.Text.Data="Visit https://login.example.org/reset" \
  --profile compromised
___________________________________________________________________________________________________________________

🧾 IOCs (Synthetic)

| Type      | Value                                                              | Source          | Status    |
| --------- | ------------------------------------------------------------------ | --------------- | --------- |
| 🌐 IP     | 203.0.113.45                                                       | CloudTrail      | Malicious |
| 👤 ARN    | arn\:aws\:iam::111122223333\:user/lambda-svc                       | CloudTrail      | Abused    |
| 📧 Sender | [notify@mail.example.org](mailto:notify@mail.example.org)          | SES logs        | Abused    |
| 🔗 URL    | [https://login.example.org/reset](https://login.example.org/reset) | Phish content   | Malicious |
| 🔑 AKIA   | AKIA\*\*\*\*\*\*\*\*DEMO                                           | Lambda env dump | Disabled  |
___________________________________________________________________________________________________________________


👀 Detection Use Cases

🚨 Alert on SES usage from Lambda functions that normally don’t send email.

🚨 CloudTrail monitoring for enumeration-heavy API activity.

☁️ Billing anomaly alerts for SES / Lambda spikes.

☁️ Monitor access keys tied to serverless functions.
___________________________________________________________________________________________________________________

🛡️ Response Actions

❌ Disabled exposed access key (AKIA********DEMO) and rotated all Lambda secrets.

📧 Blocked SES sending from notify@mail.example.org; reviewed SES identities and policies.

🔎 Queried CloudTrail for all activity from 203.0.113.45 and the abused IAM user lambda-svc.

📜 Enabled CloudTrail Data Events for Lambda; added GuardDuty detections for unusual SES spikes.

🔒 Implemented least-privilege on Lambda roles; moved secrets to AWS Secrets Manager.
___________________________________________________________________________________________________________________

🛡️ Recommendations

🔑 Remove static keys from Lambda → use IAM roles with least privilege.

📧 Restrict SES sending policies; enable DKIM/DMARC monitoring.

🚨 Enable GuardDuty & CloudTrail to detect anomalous usage.

💰 Deploy cost/billing anomaly alerts to flag spikes.

🔄 Regularly rotate and audit IAM keys.
