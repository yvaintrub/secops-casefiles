# ☁️ Demo Case: Cloud Credential Abuse via AWS Lambda (Anonymized)

## 📌 Executive Summary
This case describes a **cloud-focused compromise**.  
The attacker obtained exposed **AWS Lambda credentials**, used them to enumerate cloud services (IAM, S3, SES), and launched a **phishing campaign** via AWS SES.  

**🎯 Outcome:** unauthorized use of cloud resources, domain-trusted phishing, increased costs, and elevated organizational risk.  

---

## 🖼 Attack Flow (ASCII Diagram)

                ┌───────────────────────────────┐
                │   Attacker (External Host)    │
                └──────────────┬────────────────┘
                               │  (stolen Lambda creds)
                               v
                ┌───────────────────────────────┐
                │   AWS Lambda Function         │
                │ (compromised, exposed keys)   │
                └──────────────┬────────────────┘
                               │
                               v
                ┌───────────────────────────────┐
                │   AWS API Enumeration         │
                │  (IAM, S3, SES discovery)     │
                └───────┬──────────────┬────────┘
                        │              │
                        │              │
                        v              v
         ┌──────────────────────┐   ┌──────────────────────┐
         │   IAM Accounts       │   │   S3 Buckets         │
         │ (list users/roles)   │   │ (checked for data)   │
         └──────────────────────┘   └──────────────────────┘
                        │
                        v
                ┌───────────────────────────────┐
                │   AWS SES Abuse               │
                │ (phishing via trusted domain) │
                └──────────────┬────────────────┘
                               │
                               v
                ┌───────────────────────────────┐
                │   External Victims            │
                │  (receive phishing emails)    │
                └──────────────┬────────────────┘
                               │
                               v
                ┌───────────────────────────────┐
                │   Business Impact             │
                │  - Cloud spend spike          │
                │  - Credential theft risk      │
                │  - Reputation damage          │
                └───────────────────────────────┘

---

## 📖 Attack Narrative

### Stage 1 – Initial Access
- ☁️ **Compromised Lambda credentials** (e.g., leaked keys in code, misconfig).  
- Attacker gains programmatic access into AWS environment.  

### Stage 2 – Enumeration
- Used stolen keys to query **IAM, S3, SES** via AWS API.  
- Discovered mail-sending capability through SES.  

### Stage 3 – Weaponization
- Leveraged AWS SES to send **phishing emails** using the organization’s legitimate domain.  
- Phishing looked more credible due to trusted mail source.  

### Stage 4 – Impact
- Cloud billing costs increased.  
- Users exposed to phishing → potential credential theft.  
- Organization reputation at risk.  

---

## ⏱️ Timeline (UTC)

| Time   | Event                                          |
|--------|------------------------------------------------|
| T0     | ☁️ Lambda credentials compromised              |
| T0+1h  | ☁️ AWS API enumeration begins (IAM/S3/SES)     |
| T0+2h  | ☁️ SES misused to send large phishing campaign |
| T0+6h  | ☁️ Cloud spend spike alerts detected           |

---

## 🔑 Key Findings
- ☁️ **Credentials stored in Lambda code** enabled full compromise.  
- ☁️ **API enumeration** allowed discovery of SES.  
- ☁️ **SES misuse** made phishing appear legitimate.  
- ☁️ **No monitoring** of Lambda → delayed detection.  

---

## 🗂️ MITRE ATT&CK Mapping
- **T1078** – Valid Accounts (stolen cloud keys)  
- **T1087** – Account Discovery (IAM API calls)  
- **T1530** – Data from Cloud Storage (S3 access attempts)  
- **T1586.002** – Compromise Infrastructure: Email Accounts (SES phishing)  
- **T1567** – Exfiltration over Web Services  

---

## 👀 Detection Use Cases
- 🚨 Alert on **SES usage** from Lambda functions that normally don’t send email.  
- 🚨 CloudTrail monitoring for **enumeration-heavy API activity**.  
- ☁️ Billing anomaly alerts for SES / Lambda spikes.  
- ☁️ Monitor access keys tied to serverless functions.  

---

## 🛡️ Recommendations
- Remove static keys from Lambda → use **IAM roles with least privilege**.  
- Restrict SES sending policies; enable DKIM/DMARC monitoring.  
- Enable **GuardDuty & CloudTrail** to detect anomalous usage.  
- Deploy cost/billing anomaly alerts to flag spikes.  
- Regularly rotate and audit IAM keys.  

---
